#pragma checksum "F:\PR\Pravin backup\Lakhan Sir NEw Project\24-06-2022\IOSystem\IOSystem\IOSystem\Views\IRegister\Create - Copy.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "0aaa4b3bad75c0fb26ad76e5db9ab7d5fb7ce0a9"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_IRegister_Create___Copy), @"mvc.1.0.view", @"/Views/IRegister/Create - Copy.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "F:\PR\Pravin backup\Lakhan Sir NEw Project\24-06-2022\IOSystem\IOSystem\IOSystem\Views\_ViewImports.cshtml"
using IOSystem;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "F:\PR\Pravin backup\Lakhan Sir NEw Project\24-06-2022\IOSystem\IOSystem\IOSystem\Views\_ViewImports.cshtml"
using IOSystem.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0aaa4b3bad75c0fb26ad76e5db9ab7d5fb7ce0a9", @"/Views/IRegister/Create - Copy.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d5a5b2bdbbdf4a78834ce221d3330203b9b822f3", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_IRegister_Create___Copy : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("well form-horizontal"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("action", new global::Microsoft.AspNetCore.Html.HtmlString(" "), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("IRegister"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "F:\PR\Pravin backup\Lakhan Sir NEw Project\24-06-2022\IOSystem\IOSystem\IOSystem\Views\IRegister\Create - Copy.cshtml"
  
    ViewBag.Title = "Inward Register";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n<!DOCTYPE html>\r\n<html>\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0aaa4b3bad75c0fb26ad76e5db9ab7d5fb7ce0a95511", async() => {
                WriteLiteral("\r\n\r\n    <title>Inward Form</title>\r\n\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0aaa4b3bad75c0fb26ad76e5db9ab7d5fb7ce0a96519", async() => {
                WriteLiteral("\r\n    <div class=\"container\">\r\n\r\n        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0aaa4b3bad75c0fb26ad76e5db9ab7d5fb7ce0a96822", async() => {
                    WriteLiteral("\r\n            <fieldset>\r\n\r\n                <!-- Form Name -->\r\n                <legend>आवक रजिस्टर</legend>\r\n\r\n");
                    WriteLiteral("\r\n                <!-- Text input-->\r\n\r\n                <div class=\"form-group\" style=\"display: inline-block; width: 45%;\">\r\n\r\n                    <label class=\"col-md-4 control-label\">आवक नं. :</label>\r\n");
                    WriteLiteral(@"                <div class=""input-group"">
                    <span class=""input-group-addon""><i class=""glyphicon glyphicon-user""></i></span>
                    <input name=""txtIRCode"" placeholder=""IR Code"" class=""form-control"" type=""text"">
                </div>
");
                    WriteLiteral("                </div>\r\n\r\n                <!-- Date input-->\r\n\r\n                <div class=\"form-group\" style=\"display: inline-block; width: 45%;\">\r\n                    <label class=\"col-md-4 control-label\">आवक दिनांक :</label>\r\n");
                    WriteLiteral(@"                    <div class=""input-group"">
                        <span class=""input-group-addon""><i class=""glyphicon glyphicon-user""></i></span>
                        <input name=""dtpIRDate"" placeholder=""IR Date"" class=""form-control"" type=""date"">
                    </div>
");
                    WriteLiteral("                </div>\r\n                <!-- Text input-->\r\n\r\n                <div class=\"form-group\" style=\"display: inline-block; width: 45%;\">\r\n                    <label class=\"col-md-4 control-label\">पत्राचा क्रमांक :</label>\r\n");
                    WriteLiteral(@"                    <div class=""input-group"">
                        <span class=""input-group-addon""><i class=""glyphicon glyphicon-user""></i></span>
                        <input name=""txtLtrCode"" placeholder=""Letter Code"" class=""form-control"" type=""text"">
                    </div>
");
                    WriteLiteral("                </div>\r\n\r\n                <!-- Date input-->\r\n\r\n                <div class=\"form-group\" style=\"display: inline-block; width: 45%;\">\r\n                    <label class=\"col-md-4 control-label\">पत्र दिनांक :</label>\r\n");
                    WriteLiteral(@"                    <div class=""input-group"">
                        <span class=""input-group-addon""><i class=""glyphicon glyphicon-user""></i></span>
                        <input name=""dtpLtrDate"" placeholder=""Letter Date"" class=""form-control"" type=""date"">
                    </div>
");
                    WriteLiteral(@"                </div>

                <!-- Text input-->
                <div class=""form-group"" style=""display: inline-block; width: 45%;"">
                    <label class=""col-md-4 control-label"" style=""width:150px;"">कोणाकडून प्राप्त झाले :</label>
");
                    WriteLiteral(@"                    <div class=""input-group"">
                        <span class=""input-group-addon""><i class=""glyphicon glyphicon-envelope""></i></span>
                        <input name=""txtRcvFrm"" placeholder=""Received From"" class=""form-control"" type=""text"">
                    </div>
");
                    WriteLiteral(@"                </div>

                <!-- Text input-->

                <div class=""form-group"" style=""display: inline-block; width: 45%;"">
                    <label class=""col-md-4 control-label"">विषय / प्रकरण :</label>
                    <div class=""col-md-4 inputGroupContainer"">
                        <div class=""input-group"">
                            <span class=""input-group-addon""><i class=""glyphicon glyphicon-earphone""></i></span>
                            <input name=""txtSubject"" placeholder=""Subject"" class=""form-control"" type=""text"">
                        </div>
                    </div>
                </div>

                <!-- Text input-->

                <div class=""form-group"" style=""display: inline-block; width: 45%;"">
                    <label class=""col-md-4 control-label"">कोणास दिले :</label>
");
                    WriteLiteral(@"                    <div class=""input-group"">
                        <span class=""input-group-addon""><i class=""glyphicon glyphicon-home""></i></span>
                        <input name=""txtGiveTo"" placeholder=""Given To"" class=""form-control"" type=""text"">
                    </div>
");
                    WriteLiteral("                </div>\r\n\r\n                <!-- Text input-->\r\n\r\n                <div class=\"form-group\" style=\"display: inline-block; width: 45%;\">\r\n                    <label class=\"col-md-4 control-label\">पत्र प्रकार :</label>\r\n");
                    WriteLiteral(@"                    <div class=""input-group"">
                        <span class=""input-group-addon""><i class=""glyphicon glyphicon-home""></i></span>
                        <input name=""txtLetterCategory"" placeholder=""Letter Category"" class=""form-control"" type=""text"">
                    </div>
");
                    WriteLiteral(@"                </div>

                <!-- Text input-->

                <div class=""form-group"" style=""display: inline-block; width: 45%;"">
                    <label class=""col-md-4 control-label"">कालावधी :</label>
                    <div class=""col-md-4 inputGroupContainer"">
                        <div class=""input-group"">
                            <span class=""input-group-addon""><i class=""glyphicon glyphicon-home""></i></span>
                            <input name=""txtDuration"" placeholder=""Duration"" class=""form-control"" type=""text"">
                        </div>
                    </div>
                </div>

                <!-- Text input-->

                <div class=""form-group"" style=""display: inline-block; width: 45%;"">
                    <label class=""col-md-4 control-label"">मोबाईल नं. :</label>
                    <div class=""col-md-4 inputGroupContainer"">
                        <div class=""input-group"">
                            <span class=""input-group-addon");
                    WriteLiteral(@"""><i class=""glyphicon glyphicon-earphone""></i></span>
                            <input name=""txtMobNo"" placeholder=""Mobile No"" class=""form-control"" type=""text"">
                        </div>
                    </div>
                </div>

                <!-- Text input-->
                <div class=""form-group"" style=""display: inline-block; width: 45%;"">
                    <label class=""col-md-4 control-label"">ई-मेल :</label>
                    <div class=""col-md-4 inputGroupContainer"">
                        <div class=""input-group"">
                            <span class=""input-group-addon""><i class=""glyphicon glyphicon-envelope""></i></span>
                            <input name=""txtemail"" placeholder=""E-Mail Address"" class=""form-control"" type=""text"">
                        </div>
                    </div>
                </div>


                <!-- Text area -->

                <div class=""form-group"" style=""display: inline-block; width: 45%;"">
                    <la");
                    WriteLiteral(@"bel class=""col-md-4 control-label"">शेरा :</label>
                    <div class=""col-md-4 inputGroupContainer"">
                        <div class=""input-group"">
                            <span class=""input-group-addon""><i class=""glyphicon glyphicon-pencil""></i></span>
                            <textarea class=""form-control"" name=""txtRemark"" placeholder=""Remark""></textarea>
                        </div>
                    </div>
                </div>

                <!-- Select Basic -->

                <div class=""form-group"" style=""display: inline-block; width: 45%;"">
                    <label class=""col-md-4 control-label"">पत्र सध्यस्थिती :</label>
                    <div class=""col-md-4 selectContainer"">
                        <div class=""input-group"">
                            <span class=""input-group-addon""><i class=""glyphicon glyphicon-list""></i></span>
                            <select name=""state"" class=""form-control selectpicker"">
");
                    WriteLiteral("                                ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0aaa4b3bad75c0fb26ad76e5db9ab7d5fb7ce0a915576", async() => {
                        WriteLiteral("Pending");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0aaa4b3bad75c0fb26ad76e5db9ab7d5fb7ce0a916680", async() => {
                        WriteLiteral("Receive");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0aaa4b3bad75c0fb26ad76e5db9ab7d5fb7ce0a917784", async() => {
                        WriteLiteral("Under Objection");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0aaa4b3bad75c0fb26ad76e5db9ab7d5fb7ce0a918896", async() => {
                        WriteLiteral("Complete");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0aaa4b3bad75c0fb26ad76e5db9ab7d5fb7ce0a920001", async() => {
                        WriteLiteral("Await");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral(@"
                            </select>
                        </div>
                    </div>
                </div>


                <!-- Date input-->

                <div class=""form-group"" style=""display: inline-block; width: 45%;"">
                    <label class=""col-md-4 control-label"">दिनांक :</label>
                    <div class=""col-md-4 inputGroupContainer"">
                        <div class=""input-group"">
                            <span class=""input-group-addon""><i class=""glyphicon glyphicon-user""></i></span>
                            <input name=""dtpCompleteDate"" placeholder=""Date"" class=""form-control"" type=""date"">
                        </div>
                    </div>
                </div>

                <!-- Text input-->

                <div class=""form-group"" style=""display: inline-block; width: 45%;"">
                    <label class=""col-md-4 control-label"">जावक नं. :</label>
                    <div class=""col-md-4 inputGroupContainer"">
         ");
                    WriteLiteral(@"               <div class=""input-group"">
                            <span class=""input-group-addon""><i class=""glyphicon glyphicon-home""></i></span>
                            <input name=""txtOutwardNo"" placeholder=""Outward No"" class=""form-control"" type=""text"">
                        </div>
                    </div>
                </div>


                <!-- Text area -->

                <div class=""form-group"">
                    <label class=""col-md-4 control-label"">जावक शेरा :</label>
                    <div class=""col-md-4 inputGroupContainer"">
                        <div class=""input-group"">
                            <span class=""input-group-addon""><i class=""glyphicon glyphicon-pencil""></i></span>
                            <textarea class=""form-control"" name=""txtOutwardRemark"" placeholder=""Outward Remark""></textarea>
                        </div>
                    </div>
                </div>

                <!-- Success message -->
");
                    WriteLiteral(@"
                <!-- Button -->
                <div class=""form-group"">
                    <label class=""col-md-4 control-label""></label>
                    <div class=""col-md-4"">
                        <button type=""submit"" class=""btn btn-warning"">Save<span class=""glyphicon glyphicon-send""></span></button>
                    </div>
                </div>

            </fieldset>
        ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_2.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"

    </div><!-- /.container -->
    <script type=""text/javascript"">
        $(document).ready(function () {
            $('#IRegister').bootstrapValidator({
                // To use feedback icons, ensure that you use Bootstrap v3.1.0 or later
                feedbackIcons: {
                    valid: 'glyphicon glyphicon-ok',
                    invalid: 'glyphicon glyphicon-remove',
                    validating: 'glyphicon glyphicon-refresh'
                },
                fields: {
                    txtIRCode: {
                        validators: {      
                            notEmpty: {
                                message: 'Please Enter IR Code'
                            }
                        }
                    },
                    dtpIRDate: {
                        validators: {  
                            notEmpty: {
                                message: 'Please select Date'
                            }
                        }
         ");
                WriteLiteral(@"           },
                    txtLtrCode: {
                        validators: {
                            notEmpty: {
                                message: 'Please enter Letter No'
                            }
                        }
                    },
                    dtpLtrDate: {
                        validators: {
                            notEmpty: {
                                message: 'Please select Date'
                            }
                        }
                    },
                    txtRcvFrm: {
                        validators: {
                            notEmpty: {
                                message: 'Please enter Name'
                            }
                            
                        }
                    },
                    txtSubject: {
                        validators: {     
                            notEmpty: {
                                message: 'Please enter Subject'
            ");
                WriteLiteral(@"                }
                        }
                    },
                    
                    txtGiveTo: {
                        validators: {
                            notEmpty: {
                                message: 'Please enter Name'
                            }
                        }
                    },
                    txtLetterCategory: {
                        validators: {
                            notEmpty: {
                                message: 'Please enter Letter Category'
                            }
                        }
                    }
                }
            })
                .on('success.form.bv', function (e) {
                    $('#success_message').slideDown({ opacity: ""show"" }, ""slow"") // Do something ...
                    $('#IRegister').data('bootstrapValidator').resetForm();

                    // Prevent form submission
                    e.preventDefault();

                    // Get the form ");
                WriteLiteral(@"instance
                    var $form = $(e.target);

                    // Get the BootstrapValidator instance
                    var bv = $form.data('bootstrapValidator');

                    // Use Ajax to submit form data
                    $.post($form.attr('action'), $form.serialize(), function (result) {
                        console.log(result);
                    }, 'json');
                });
        });
    </script>

");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n</html>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
